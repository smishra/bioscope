cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include Enhancer.cc
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include SearchPattern.cc
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include GetOptions.cc
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include EnhancerParam.cc
EnhancerParam.cc: In member function ‘void EnhancerParam::ReadFile(char*)’:
EnhancerParam.cc:190:27: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
      SetNoOverLapString("") ;
                           ^
EnhancerParam.cc:256:31: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
      SetConditionConstraint("") ;
                               ^
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include BooleanExpression.cc
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include EnhancerResults.cc
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
 char *color[] = {"red", "orange", "green", "cyan", "brown", "purple", "black", "violet", "peachbuf", "magenta"} ;
                                                                                                               ^
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc:12:111: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
EnhancerResults.cc: In member function ‘void Results::OutputResults(EnhancerParam&, Sequence::Fasta&, std::vector<Annotation*>&, Exon&)’:
EnhancerResults.cc:203:196: warning: format ‘%d’ expects argument of type ‘int’, but argument 8 has type ‘long int’ [-Wformat=]
       sprintf (WebBuffer, "%s%s%s_%s?name=%s:%d..%d<and>span=%d", WebAddress, EnhancerAddress, Param.GetSessionName(), Param.GetChName(), ChromosomeName, start_gene, end_gene, end_gene-start_gene) ;
                                                                                                                                                                                                    ^
EnhancerResults.cc:203:196: warning: format ‘%d’ expects argument of type ‘int’, but argument 9 has type ‘long int’ [-Wformat=]
EnhancerResults.cc:203:196: warning: format ‘%d’ expects argument of type ‘int’, but argument 10 has type ‘long int’ [-Wformat=]
EnhancerResults.cc:207:218: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
       sprintf (buffer,  "%s\tcig\tcluster\t%d\t%d\t.\t.\t.\tcluster %d\n", Ch, ResultList[start]->GetPosition()+1,(ResultList[start+LastSite-1]->GetPosition() + ResultList[start+LastSite-1]->GetLength()), ClusterCount) ;
                                                                                                                                                                                                                          ^
EnhancerResults.cc:207:218: warning: format ‘%d’ expects argument of type ‘int’, but argument 5 has type ‘long unsigned int’ [-Wformat=]
EnhancerResults.cc:217:290: warning: format ‘%d’ expects argument of type ‘int’, but argument 8 has type ‘long int’ [-Wformat=]
       sprintf (WebBuffer, "<address>\n%s\n</address>\n<location>\n%s%s_%s\n</location>\n<nameval>\nname=%s:%d..%d\n</nameval>\n<nameval>\nspan=%d\n</nameval>", WebAddress, EnhancerAddress, Param.GetSessionName(), Param.GetChName(), ChromosomeName, start_gene, end_gene, end_gene-start_gene) ;
                                                                                                                                                                                                                                                                                                  ^
EnhancerResults.cc:217:290: warning: format ‘%d’ expects argument of type ‘int’, but argument 9 has type ‘long int’ [-Wformat=]
EnhancerResults.cc:217:290: warning: format ‘%d’ expects argument of type ‘int’, but argument 10 has type ‘long int’ [-Wformat=]
EnhancerResults.cc: In member function ‘void Results::PrintResults(EnhancerParam&, int, int, Sequence::Fasta&, std::string&, int, std::fstream&, std::string&)’:
EnhancerResults.cc:561:44: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
        ResultList[PrintCount]->GetLength())) ;
                                            ^
EnhancerResults.cc:585:265: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long unsigned int’ [-Wformat=]
        sprintf (buffer, "<start>\n%d\n</start>\n<length>\n%d\n</length>\n<orientation>\n%c\n</orientation>\n", ResultList[PrintCount]->GetPosition()+1, (ResultList[PrintCount]->GetPosition() + ResultList[PrintCount]->GetLength()), ResultList[PrintCount]->GetType()) ;
                                                                                                                                                                                                                                                                         ^
EnhancerResults.cc:585:265: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
EnhancerResults.cc:587:302: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long unsigned int’ [-Wformat=]
        sprintf (buffer,  "%s\tcig\tsites\t%d\t%d\t.\t%c\t.\tcluster %d-%s\n", Ch, ResultList[PrintCount]->GetPosition()+1,(ResultList[PrintCount]->GetPosition() + ResultList[PrintCount]->GetLength()), ch, cluster, Param.GetPatternLists()[ResultList[PrintCount]->GetName() - 0x41]->GetUserPatternName()) ;
                                                                                                                                                                                                                                                                                                              ^
EnhancerResults.cc:587:302: warning: format ‘%d’ expects argument of type ‘int’, but argument 5 has type ‘long unsigned int’ [-Wformat=]
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include AnnotationGrammar.cc
AnnotationGrammar.cc: In function ‘void StoreGene(Annotation**, std::string&)’:
AnnotationGrammar.cc:154:31: warning: format ‘%d’ expects argument of type ‘int*’, but argument 6 has type ‘long int*’ [-Wformat=]
    GroupName, GroupDescription) ;
                               ^
AnnotationGrammar.cc:154:31: warning: format ‘%d’ expects argument of type ‘int*’, but argument 7 has type ‘long int*’ [-Wformat=]
AnnotationGrammar.cc:187:42: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        (*Gl)->InsertNotes("Symbol", Value) ;
                                          ^
AnnotationGrammar.cc:200:43: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        (*Gl)->InsertNotes("FlyBase", Value) ;
                                           ^
In file included from /usr/include/string.h:640:0,
                 from AnnotationGrammar.cc:23:
In function ‘void* memset(void*, int, size_t)’,
    inlined from ‘void StoreGene(Annotation**, std::string&)’ at AnnotationGrammar.cc:181:29:
/usr/include/x86_64-linux-gnu/bits/string3.h:81:32: warning: call to ‘__warn_memset_zero_len’ declared with attribute warning: memset used with constant zero length parameter; this could be due to transposed parameters [enabled by default]
       __warn_memset_zero_len ();
                                ^
In function ‘void* memset(void*, int, size_t)’,
    inlined from ‘void StoreGene(Annotation**, std::string&)’ at AnnotationGrammar.cc:194:29:
/usr/include/x86_64-linux-gnu/bits/string3.h:81:32: warning: call to ‘__warn_memset_zero_len’ declared with attribute warning: memset used with constant zero length parameter; this could be due to transposed parameters [enabled by default]
       __warn_memset_zero_len ();
                                ^
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include EnhancerJava.cc
EnhancerJava.cc: In function ‘void GetNearByGenes(long int, long int, std::string&, std::vector<Annotation*>&, Exon&, EnhancerParam&, std::string&, std::string&, bool&, std::string&)’:
EnhancerJava.cc:380:67: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        char *NotesInfo = (char *) (*beginpos)->GetNotes("GeneName") ;
                                                                   ^
EnhancerJava.cc:411:92: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%s<td>%d</td>", GeneStart.c_str(), (*beginpos)->GetStartPosition()) ;
                                                                                            ^
EnhancerJava.cc:413:64: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%d\n", (*beginpos)->GetStartPosition()) ;
                                                                ^
EnhancerJava.cc:417:128: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%s<td>%d</td>", GeneEnd.c_str(), abs ((*beginpos)->GetStartPosition() - (*beginpos)->GetEndPosition())) ;
                                                                                                                                ^
EnhancerJava.cc:419:62: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%d\n", (*beginpos)->GetEndPosition()) ;
                                                              ^
EnhancerJava.cc:438:58: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        NotesInfo = (char *) (*beginpos)->GetNotes("Blast") ;
                                                          ^
EnhancerJava.cc:452:70: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        NotesInfo = (char *) (*beginpos)->GetNotes("MolecularFunction") ;
                                                                      ^
EnhancerJava.cc:538:59: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
      NotesInfo = (char *) (*beginpos)->GetNotes("GeneName") ;
                                                           ^
EnhancerJava.cc:572:90: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long int’ [-Wformat=]
      sprintf (buffer, "%s<td>%d</td>", GeneStart.c_str(), (*beginpos)->GetStartPosition()) ;
                                                                                          ^
EnhancerJava.cc:574:64: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%d\n", (*beginpos)->GetStartPosition()) ;
                                                                ^
EnhancerJava.cc:578:127: warning: format ‘%d’ expects argument of type ‘int’, but argument 4 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%s<td>%d</td>", GeneEnd.c_str(), abs((*beginpos)->GetStartPosition() - (*beginpos)->GetEndPosition())) ;
                                                                                                                               ^
EnhancerJava.cc:581:62: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%d\n", (*beginpos)->GetEndPosition()) ;
                                                              ^
EnhancerJava.cc:598:56: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
      NotesInfo = (char *) (*beginpos)->GetNotes("Blast") ;
                                                        ^
EnhancerJava.cc:612:66: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
    NotesInfo = (char *) (*beginpos)->GetNotes("MolecularFunction") ;
                                                                  ^
EnhancerJava.cc:713:57: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
    NotesInfo = (char *) (*beginpos)->GetNotes("GeneName") ;
                                                         ^
EnhancerJava.cc:745:67: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
    sprintf (buffer, "<td>%d</td>", (*beginpos)->GetStartPosition()) ;
                                                                   ^
EnhancerJava.cc:747:64: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
        sprintf (buffer, "%d\n", (*beginpos)->GetStartPosition()) ;
                                                                ^
EnhancerJava.cc:750:65: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
    sprintf (buffer, "<td>%d</td>", (*beginpos)->GetEndPosition()) ;
                                                                 ^
EnhancerJava.cc:752:98: warning: format ‘%d’ expects argument of type ‘int’, but argument 3 has type ‘long int’ [-Wformat=]
    sprintf (buffer, "%d\n", abs ((*beginpos)->GetStartPosition() - (*beginpos)->GetEndPosition())) ;
                                                                                                  ^
EnhancerJava.cc:774:58: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        NotesInfo = (char *) (*beginpos)->GetNotes("Blast") ;
                                                          ^
EnhancerJava.cc:786:70: warning: deprecated conversion from string constant to ‘char*’ [-Wwrite-strings]
        NotesInfo = (char *) (*beginpos)->GetNotes("MolecularFunction") ;
                                                                      ^
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include SequenceClass.cc
cc -L/usr/include/boost/libs/regex/build/gcc -o enhancer Enhancer.o SearchPattern.o GetOptions.o EnhancerParam.o BooleanExpression.o EnhancerResults.o AnnotationGrammar.o EnhancerJava.o SequenceClass.o -lboost_regex -lboost_filesystem -lstdc++ -lboost_system -lsequence  -lz
AnnotationGrammar.o: In function `StoreGene(Annotation**, std::string&)':
AnnotationGrammar.cc:(.text+0xbae): warning: memset used with constant zero length parameter; this could be due to transposed parameters
rm -f ../../lib/libbiocisinit.a
ar cr ../../lib/libbiocisinit.a SequenceClass.o AnnotationGrammar.o
ranlib ../../lib/libbiocisinit.a
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include SuperEnhancerJavaMain.cc
cc -shared -L/usr/include/boost/libs/regex/build/gcc -o libSuperEnhancer.so SuperEnhancerJavaMain.o SearchPattern.o GetOptions.o EnhancerParam.o BooleanExpression.o EnhancerResults.o AnnotationGrammar.o EnhancerJava.o SequenceClass.o /usr/local/lib/libsequence.so /usr/lib/x86_64-linux-gnu/libboost_regex.so /usr/lib/x86_64-linux-gnu/libboost_filesystem.so
AnnotationGrammar.o: In function `StoreGene(Annotation**, std::string&)':
AnnotationGrammar.cc:(.text+0xbae): warning: memset used with constant zero length parameter; this could be due to transposed parameters
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include SuperEnhancerCheck.cc
cc -shared -L/usr/include/boost/libs/regex/build/gcc -o libSuperECheck.so SuperEnhancerCheck.o SearchPattern.o GetOptions.o EnhancerParam.o BooleanExpression.o EnhancerResults.o AnnotationGrammar.o EnhancerJava.o SequenceClass.o  /usr/local/lib/libsequence.so /usr/lib/x86_64-linux-gnu/libboost_regex.so /usr/lib/x86_64-linux-gnu/libboost_filesystem.so
AnnotationGrammar.o: In function `StoreGene(Annotation**, std::string&)':
AnnotationGrammar.cc:(.text+0xbae): warning: memset used with constant zero length parameter; this could be due to transposed parameters
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include EnhancerJavaMain.cc
cc -shared -L/usr/include/boost/libs/regex/build/gcc -o libEnhancer.so EnhancerJavaMain.o SearchPattern.o GetOptions.o EnhancerParam.o BooleanExpression.o EnhancerResults.o AnnotationGrammar.o EnhancerJava.o SequenceClass.o /usr/local/lib/libsequence.so /usr/lib/x86_64-linux-gnu/libboost_regex.so /usr/lib/x86_64-linux-gnu/libboost_filesystem.so
AnnotationGrammar.o: In function `StoreGene(Annotation**, std::string&)':
AnnotationGrammar.cc:(.text+0xbae): warning: memset used with constant zero length parameter; this could be due to transposed parameters
cc -c -O6 -fPIC   -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include -I/usr/local/include -I/usr/include/c++/4.4.1 -I/usr/include/boost -I../include  -I/usr/include/g++ -I/usr/lib/gcc/x86_64-linux-gnu/4.4.1/include/  -I/usr/lib/jvm/java-7-openjdk-amd64/include EnhancerCheck.cc
cc -shared -L/usr/include/boost/libs/regex/build/gcc -o libECheck.so EnhancerCheck.o SearchPattern.o GetOptions.o EnhancerParam.o BooleanExpression.o EnhancerResults.o AnnotationGrammar.o EnhancerJava.o SequenceClass.o  /usr/local/lib/libsequence.so /usr/lib/x86_64-linux-gnu/libboost_regex.so /usr/lib/x86_64-linux-gnu/libboost_filesystem.so
AnnotationGrammar.o: In function `StoreGene(Annotation**, std::string&)':
AnnotationGrammar.cc:(.text+0xbae): warning: memset used with constant zero length parameter; this could be due to transposed parameters
